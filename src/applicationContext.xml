<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">
       <!-- 配置缓存管理器 1. 使用 ehcache. 所以需要导入 ehcache 的 jar 包 2. 需要使用 ehcache 的配置文件. -->
       <bean class="org.apache.shiro.cache.ehcache.EhCacheManager" id="cacheManager">
       		<property name="cacheManagerConfigFile"  value="classpath:ehcache.xml"></property>
       </bean>
       <!-- 自定义的 Realm 需要继承 org.apache.shiro.realm.AuthorizingRealm 作为父类。 -->
       <bean id="realm" class="my.first.shrio.realms.MyShrioRealm"></bean>
    <!-- =========================================================
         Shiro Core Components - Not Spring Specific
         ========================================================= -->
         <!-- 配置 Shiro 的 SecurityManager 实例. -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
   		 <!-- 配置管理缓存的 cacheManager 成员变量 -->
        <property name="cacheManager" ref="cacheManager"/>
        <!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
      <!--   <property name="sessionMode" value="native"/> -->
        <!-- 配置访问 shiro 安全数据的 realm. 具体是登录时和权限校验时需要访问数据库资源 -->
        <property name="realm" ref="realm"/>
    </bean>
	<!-- 配置自动调用 Spring IOC 容器中 shiro bean 的生命周期方法的 BeanPostProcessor. -->
	<bean class="org.apache.shiro.spring.LifecycleBeanPostProcessor" id="lifecycleBeanPostProcessor"></bean>
    <!-- =========================================================
         Shiro Spring-specific integration-->
         <!-- 在 Spring 中启用 shiro 的权限注解. 前提: 必须配置 LifecycleBeanPostProcessor bean. -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
          
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
   <!--   <bean id="secureRemoteInvocationExecutor" class="org.apache.shiro.spring.remoting.SecureRemoteInvocationExecutor">
        <property name="securityManager" ref="securityManager"/>
    </bean>  -->

	<!-- 配置 ShiroFilter 1. 注意: id 必须和 web.xml 文件中配置 DelegatingFilterProxy 的 <filter-name> 一致 2. -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
  		<property value="/login.jsp" name="loginUrl"/>
		<property value="/unauthorized.jsp" name="unauthorizedUrl"/>
        <property name="filterChainDefinitions"> 
        	<value> 
        	/login.jsp = anon 
        	/shiroLogin = anon 
        	/logout = logout 
			user.jsp = roles[user] 
			/admin.jsp = roles[admin] 
			# everything else requires authentication: /** = authc 
		</value> 
		</property>
    </bean>

</beans>
